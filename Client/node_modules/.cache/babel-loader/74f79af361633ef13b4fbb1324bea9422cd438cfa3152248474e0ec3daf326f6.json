{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\programming\\\\git clone\\\\mong-geul\\\\Client\\\\src\\\\contexts\\\\wakeupTimeReducer.context.tsx\",\n  _s = $RefreshSig$();\nimport { useReducer, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const INITIAL_VALUE = {\n  hour: 8,\n  minute: 0,\n  md: \"AM\"\n};\nexport const WakeUpTimeContext = /*#__PURE__*/createContext({});\nexport const DispatchContext = /*#__PURE__*/createContext(null);\nexport const TimeSettingReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case \"update\":\n      const {\n        selectHour,\n        selectMinute,\n        selectMd\n      } = payload;\n      return {\n        hour: parseInt(selectHour),\n        minute: parseInt(selectMinute),\n        md: selectMd\n      };\n    default:\n      return state;\n  }\n};\n_c = TimeSettingReducer;\nconst WakeUpTimeProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  let Data = JSON.parse(localStorage.getItem('user-wakeup-time') || '{}');\n  if (!Data) {\n    Data = {\n      hour: 8,\n      minute: 0,\n      md: \"AM\"\n    };\n  }\n  const [{\n    hour,\n    minute,\n    md\n  }, dispatch] = useReducer(TimeSettingReducer, {});\n  const value = {\n    hour,\n    minute,\n    md\n  };\n  localStorage.setItem('user-wakeup-time', JSON.stringify(value));\n  return /*#__PURE__*/_jsxDEV(DispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(WakeUpTimeContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(WakeUpTimeProvider, \"/WipezFlkFY8Oza+a+8emmUzSeA=\");\n_c2 = WakeUpTimeProvider;\nexport default WakeUpTimeProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"TimeSettingReducer\");\n$RefreshReg$(_c2, \"WakeUpTimeProvider\");","map":{"version":3,"names":["useReducer","createContext","jsxDEV","_jsxDEV","INITIAL_VALUE","hour","minute","md","WakeUpTimeContext","DispatchContext","TimeSettingReducer","state","action","type","payload","selectHour","selectMinute","selectMd","parseInt","_c","WakeUpTimeProvider","_ref","_s","children","Data","JSON","parse","localStorage","getItem","dispatch","value","setItem","stringify","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/user/Desktop/programming/git clone/mong-geul/Client/src/contexts/wakeupTimeReducer.context.tsx"],"sourcesContent":["import { useReducer, createContext, Dispatch, ReactNode } from \"react\";\r\n\r\ninterface wakeuptimeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport interface wakeUpTime {\r\n  hour: number;\r\n  minute: number;\r\n  md: string;\r\n}\r\n\r\nexport const INITIAL_VALUE: wakeUpTime = {\r\n  hour: 8,\r\n  minute: 0,\r\n  md: \"AM\",\r\n};\r\n\r\ninterface actionType {\r\n  type: string;\r\n  payload?: any;\r\n}\r\n\r\n\r\nexport const WakeUpTimeContext = createContext({} as wakeUpTime);\r\n\r\nexport const DispatchContext = createContext<Dispatch<actionType> | null>(null);\r\n\r\n\r\nexport const TimeSettingReducer = (\r\n  state: wakeUpTime,\r\n  action: actionType\r\n): wakeUpTime => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"update\":\r\n      const { selectHour, selectMinute, selectMd } = payload;\r\n      return {hour: parseInt(selectHour), minute: parseInt(selectMinute), md: selectMd };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst WakeUpTimeProvider = ({ children }: wakeuptimeProviderProps) => {\r\n  let Data = JSON.parse(localStorage.getItem('user-wakeup-time') || '{}')\r\n  if (!Data) {Data={hour:8, minute:0, md: \"AM\"}}\r\n  \r\n  const [{ hour, minute, md }, dispatch] = useReducer(\r\n    TimeSettingReducer,\r\n    {}\r\n  );\r\n\r\n  const value: wakeUpTime = { hour, minute, md };\r\n\r\n  localStorage.setItem('user-wakeup-time', JSON.stringify(value))\r\n  \r\n\r\n  return (\r\n    <DispatchContext.Provider value={dispatch}>\r\n      <WakeUpTimeContext.Provider value={value}>\r\n        {children}\r\n      </WakeUpTimeContext.Provider>\r\n    </DispatchContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WakeUpTimeProvider;\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,aAAa,QAA6B,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYvE,OAAO,MAAMC,aAAyB,GAAG;EACvCC,IAAI,EAAE,CAAC;EACPC,MAAM,EAAE,CAAC;EACTC,EAAE,EAAE;AACN,CAAC;AAQD,OAAO,MAAMC,iBAAiB,gBAAGP,aAAa,CAAC,CAAC,CAAe,CAAC;AAEhE,OAAO,MAAMQ,eAAe,gBAAGR,aAAa,CAA8B,IAAI,CAAC;AAG/E,OAAO,MAAMS,kBAAkB,GAAGA,CAChCC,KAAiB,EACjBC,MAAkB,KACH;EACf,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAK,QAAQ;MACX,MAAM;QAAEE,UAAU;QAAEC,YAAY;QAAEC;MAAS,CAAC,GAAGH,OAAO;MACtD,OAAO;QAACT,IAAI,EAAEa,QAAQ,CAACH,UAAU,CAAC;QAAET,MAAM,EAAEY,QAAQ,CAACF,YAAY,CAAC;QAAET,EAAE,EAAEU;MAAS,CAAC;IACpF;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAACQ,EAAA,GAbWT,kBAAkB;AAgB/B,MAAMU,kBAAkB,GAAGC,IAAA,IAA2C;EAAAC,EAAA;EAAA,IAA1C;IAAEC;EAAkC,CAAC,GAAAF,IAAA;EAC/D,IAAIG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC;EACvE,IAAI,CAACJ,IAAI,EAAE;IAACA,IAAI,GAAC;MAACnB,IAAI,EAAC,CAAC;MAAEC,MAAM,EAAC,CAAC;MAAEC,EAAE,EAAE;IAAI,CAAC;EAAA;EAE7C,MAAM,CAAC;IAAEF,IAAI;IAAEC,MAAM;IAAEC;EAAG,CAAC,EAAEsB,QAAQ,CAAC,GAAG7B,UAAU,CACjDU,kBAAkB,EAClB,CAAC,CACH,CAAC;EAED,MAAMoB,KAAiB,GAAG;IAAEzB,IAAI;IAAEC,MAAM;IAAEC;EAAG,CAAC;EAE9CoB,YAAY,CAACI,OAAO,CAAC,kBAAkB,EAAEN,IAAI,CAACO,SAAS,CAACF,KAAK,CAAC,CAAC;EAG/D,oBACE3B,OAAA,CAACM,eAAe,CAACwB,QAAQ;IAACH,KAAK,EAAED,QAAS;IAAAN,QAAA,eACxCpB,OAAA,CAACK,iBAAiB,CAACyB,QAAQ;MAACH,KAAK,EAAEA,KAAM;MAAAP,QAAA,EACtCA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACiB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAE/B,CAAC;AAACf,EAAA,CArBIF,kBAAkB;AAAAkB,GAAA,GAAlBlB,kBAAkB;AAuBxB,eAAeA,kBAAkB;AAAC,IAAAD,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}