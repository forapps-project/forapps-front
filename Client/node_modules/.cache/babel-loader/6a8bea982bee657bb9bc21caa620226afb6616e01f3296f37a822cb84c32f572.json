{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\programming\\\\git clone\\\\mong-geul\\\\Client\\\\src\\\\components\\\\Modal.tsx\";\nimport styled from \"styled-components\";\nimport Button from \"./button.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalBackdrop = styled.div`\n  // Modal이 떴을 때의 배경을 깔아주는 CSS를 구현\n  z-index: 1; //위치지정 요소\n  position: fixed;\n  display : flex;\n  justify-content : center;\n  align-items : center;\n  background-color: rgba(0,0,0,0.4);\n  border-radius: 10px;\n  top : 0;\n  left : 0;\n  right : 0;\n  bottom : 0;\n`;\n_c = ModalBackdrop;\nconst InsideBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 32px;\n`;\n_c2 = InsideBox;\nconst Body = styled.div``;\n_c3 = Body;\nconst Contents = styled.h6`\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.32px;\n  text-align: center;\n  position: relative;\n  top: 1.2px;\n  margin-bottom: 0;\n  white-space: pre-wrap;\n  color: ${props => props.textColor};\n  height: width;\n`;\n_c4 = Contents;\nconst ModalButton = styled(Button)`\n  display: flex;\n  width: 300px;\n  height: 52px;\n  padding: 12px 40px;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  font-size: 16px;\n`;\n_c5 = ModalButton;\nconst Modal = _ref => {\n  let {\n    isModalOpen,\n    additional,\n    label,\n    close,\n    width,\n    height,\n    background,\n    textColor\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isModalOpen && /*#__PURE__*/_jsxDEV(ModalBackdrop, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        width: width,\n        height: height,\n        background: background,\n        children: /*#__PURE__*/_jsxDEV(InsideBox, {\n          children: [/*#__PURE__*/_jsxDEV(Body, {\n            children: [/*#__PURE__*/_jsxDEV(Contents, {\n              textColor: textColor,\n              children: label.split(\"\\n\").map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [letter, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), additional ? /*#__PURE__*/_jsxDEV(Contents, {\n              textColor: textColor,\n              children: additional\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n            className: \"close\",\n            onClick: close,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c6 = Modal;\nModal.defaultProps = {\n  width: \"330px\",\n  height: \"180px\",\n  background: \"#FFF\",\n  textColor: \"#4D4D4D\"\n};\nconst Wrapper = styled.div`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  background-color: ${props => props.background};\n  border: 1px solid grey;\n  border-radius: 20px;\n  z-index: 1000;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n_c7 = Wrapper;\nexport default Modal;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"ModalBackdrop\");\n$RefreshReg$(_c2, \"InsideBox\");\n$RefreshReg$(_c3, \"Body\");\n$RefreshReg$(_c4, \"Contents\");\n$RefreshReg$(_c5, \"ModalButton\");\n$RefreshReg$(_c6, \"Modal\");\n$RefreshReg$(_c7, \"Wrapper\");","map":{"version":3,"names":["styled","Button","jsxDEV","_jsxDEV","ModalBackdrop","div","_c","InsideBox","_c2","Body","_c3","Contents","h6","props","textColor","_c4","ModalButton","_c5","Modal","_ref","isModalOpen","additional","label","close","width","height","background","children","Wrapper","split","map","letter","index","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c6","defaultProps","_c7","$RefreshReg$"],"sources":["C:/Users/user/Desktop/programming/git clone/mong-geul/Client/src/components/Modal.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport Button from \"./button.component\";\r\nimport { useModal } from \"../hooks/useModal\";\r\n\r\ninterface modalProps {\r\n  isModalOpen: boolean;\r\n  close(): void;\r\n  label: string;\r\n  additional?: any;\r\n  width: string;\r\n  height: string;\r\n  background: string;\r\n  textColor: string;\r\n}\r\n\r\nexport const ModalBackdrop = styled.div`\r\n  // Modal이 떴을 때의 배경을 깔아주는 CSS를 구현\r\n  z-index: 1; //위치지정 요소\r\n  position: fixed;\r\n  display : flex;\r\n  justify-content : center;\r\n  align-items : center;\r\n  background-color: rgba(0,0,0,0.4);\r\n  border-radius: 10px;\r\n  top : 0;\r\n  left : 0;\r\n  right : 0;\r\n  bottom : 0;\r\n`;\r\n\r\nconst InsideBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 32px;\r\n`;\r\n\r\nconst Body = styled.div``;\r\n\r\ntype TextColor = {\r\n  textColor: string;\r\n};\r\n\r\nconst Contents = styled.h6<TextColor>`\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n  letter-spacing: -0.32px;\r\n  text-align: center;\r\n  position: relative;\r\n  top: 1.2px;\r\n  margin-bottom: 0;\r\n  white-space: pre-wrap;\r\n  color: ${(props) => props.textColor};\r\n  height: width;\r\n`;\r\n\r\nconst ModalButton = styled(Button)`\r\n  display: flex;\r\n  width: 300px;\r\n  height: 52px;\r\n  padding: 12px 40px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Modal = ({\r\n  isModalOpen,\r\n  additional,\r\n  label,\r\n  close,\r\n  width,\r\n  height,\r\n  background,\r\n  textColor,\r\n}: modalProps) => {\r\n  return (\r\n    <div>\r\n      {isModalOpen && (\r\n        <ModalBackdrop>\r\n        <Wrapper width={width} height={height} background={background}>\r\n          <InsideBox>\r\n            <Body>\r\n              <Contents textColor={textColor}>\r\n                {label.split(\"\\n\").map((letter, index) => (\r\n                  <div key={index}>\r\n                    {letter}\r\n                    <br />\r\n                  </div>\r\n                ))}\r\n              </Contents>\r\n              {additional ? (\r\n                <Contents textColor={textColor}>{additional}</Contents>\r\n              ) : null}\r\n            </Body>\r\n            <ModalButton className=\"close\" onClick={close}>\r\n              확인\r\n            </ModalButton>\r\n          </InsideBox>\r\n        </Wrapper>\r\n        </ModalBackdrop>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface defaultPropsType {\r\n  width: string;\r\n  height: string;\r\n  background: string;\r\n}\r\n\r\nModal.defaultProps = {\r\n  width: \"330px\",\r\n  height: \"180px\",\r\n  background: \"#FFF\",\r\n  textColor: \"#4D4D4D\",\r\n};\r\n\r\nconst Wrapper = styled.div<defaultPropsType>`\r\n  width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n  background-color: ${(props) => props.background};\r\n  border: 1px solid grey;\r\n  border-radius: 20px;\r\n  z-index: 1000;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default Modal;\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAcxC,OAAO,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAbWF,aAAa;AAe1B,MAAMG,SAAS,GAAGP,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,SAAS;AAOf,MAAME,IAAI,GAAGT,MAAM,CAACK,GAAI,EAAC;AAACK,GAAA,GAApBD,IAAI;AAMV,MAAME,QAAQ,GAAGX,MAAM,CAACY,EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAYC,KAAK,IAAKA,KAAK,CAACC,SAAU;AACtC;AACA,CAAC;AAACC,GAAA,GAbIJ,QAAQ;AAed,MAAMK,WAAW,GAAGhB,MAAM,CAACC,MAAM,CAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgB,GAAA,GATID,WAAW;AAWjB,MAAME,KAAK,GAAGC,IAAA,IASI;EAAA,IATH;IACbC,WAAW;IACXC,UAAU;IACVC,KAAK;IACLC,KAAK;IACLC,KAAK;IACLC,MAAM;IACNC,UAAU;IACVZ;EACU,CAAC,GAAAK,IAAA;EACX,oBACEhB,OAAA;IAAAwB,QAAA,EACGP,WAAW,iBACVjB,OAAA,CAACC,aAAa;MAAAuB,QAAA,eACdxB,OAAA,CAACyB,OAAO;QAACJ,KAAK,EAAEA,KAAM;QAACC,MAAM,EAAEA,MAAO;QAACC,UAAU,EAAEA,UAAW;QAAAC,QAAA,eAC5DxB,OAAA,CAACI,SAAS;UAAAoB,QAAA,gBACRxB,OAAA,CAACM,IAAI;YAAAkB,QAAA,gBACHxB,OAAA,CAACQ,QAAQ;cAACG,SAAS,EAAEA,SAAU;cAAAa,QAAA,EAC5BL,KAAK,CAACO,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACnC7B,OAAA;gBAAAwB,QAAA,GACGI,MAAM,eACP5B,OAAA;kBAAA8B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA,GAFEJ,KAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGV,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC,EACVf,UAAU,gBACTlB,OAAA,CAACQ,QAAQ;cAACG,SAAS,EAAEA,SAAU;cAAAa,QAAA,EAAEN;YAAU;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,GACrD,IAAI;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACPjC,OAAA,CAACa,WAAW;YAACqB,SAAS,EAAC,OAAO;YAACC,OAAO,EAAEf,KAAM;YAAAI,QAAA,EAAC;UAE/C;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAChB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACG,GAAA,GAtCIrB,KAAK;AA8CXA,KAAK,CAACsB,YAAY,GAAG;EACnBhB,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,OAAO;EACfC,UAAU,EAAE,MAAM;EAClBZ,SAAS,EAAE;AACb,CAAC;AAED,MAAMc,OAAO,GAAG5B,MAAM,CAACK,GAAsB;AAC7C,WAAYQ,KAAK,IAAKA,KAAK,CAACW,KAAM;AAClC,YAAaX,KAAK,IAAKA,KAAK,CAACY,MAAO;AACpC,sBAAuBZ,KAAK,IAAKA,KAAK,CAACa,UAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACe,GAAA,GAdIb,OAAO;AAgBb,eAAeV,KAAK;AAAC,IAAAZ,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAK,GAAA,EAAAE,GAAA,EAAAsB,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}