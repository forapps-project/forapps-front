{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\programming\\\\git clone\\\\mong-geul\\\\Client\\\\src\\\\components\\\\Modal.tsx\";\nimport styled from \"styled-components\";\nimport Button from \"./button.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsideBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 32px;\n`;\n_c = InsideBox;\nconst Body = styled.div``;\n_c2 = Body;\nconst Contents = styled.h6`\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.32px;\n  text-align: center;\n  margin-top: 36px;\n  white-space: pre-wrap;\n  color: ${props => props.textColor};\n`;\n_c3 = Contents;\nconst ModalButton = styled(Button)`\n  display: flex;\n  width: 300px;\n  height: 52px;\n  padding: 12px 40px;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  font-size: 16px;\n`;\n_c4 = ModalButton;\nconst Modal = _ref => {\n  let {\n    isModalOpen,\n    additional,\n    label,\n    close,\n    width,\n    height,\n    background,\n    textColor\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isModalOpen && /*#__PURE__*/_jsxDEV(Wrapper, {\n      width: width,\n      height: height,\n      background: background,\n      children: /*#__PURE__*/_jsxDEV(InsideBox, {\n        children: [/*#__PURE__*/_jsxDEV(Body, {\n          children: [/*#__PURE__*/_jsxDEV(Contents, {\n            textColor: textColor,\n            children: label.split(\"\\n\").map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [letter, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), additional ? /*#__PURE__*/_jsxDEV(Contents, {\n            textColor: textColor,\n            children: additional\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n          className: \"close\",\n          onClick: close,\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Modal;\nModal.defaultProps = {\n  width: \"330px\",\n  height: \"180px\",\n  background: \"#FFF\",\n  textColor: \"#4D4D4D\"\n};\nconst Wrapper = styled.div`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  background-color: ${props => props.background};\n  border: 1px solid grey;\n  border-radius: 20px;\n  z-index: 1000;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n_c6 = Wrapper;\nexport default Modal;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"InsideBox\");\n$RefreshReg$(_c2, \"Body\");\n$RefreshReg$(_c3, \"Contents\");\n$RefreshReg$(_c4, \"ModalButton\");\n$RefreshReg$(_c5, \"Modal\");\n$RefreshReg$(_c6, \"Wrapper\");","map":{"version":3,"names":["styled","Button","jsxDEV","_jsxDEV","InsideBox","div","_c","Body","_c2","Contents","h6","props","textColor","_c3","ModalButton","_c4","Modal","_ref","isModalOpen","additional","label","close","width","height","background","children","Wrapper","split","map","letter","index","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c5","defaultProps","_c6","$RefreshReg$"],"sources":["C:/Users/user/Desktop/programming/git clone/mong-geul/Client/src/components/Modal.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport Button from \"./button.component\";\r\nimport { useModal } from \"../hooks/useModal\";\r\n\r\ninterface modalProps {\r\n  isModalOpen: boolean;\r\n  close(): void;\r\n  label: string;\r\n  additional?: any;\r\n  width: string;\r\n  height: string;\r\n  background: string;\r\n  textColor: string;\r\n}\r\n\r\nconst InsideBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 32px;\r\n`;\r\n\r\nconst Body = styled.div``;\r\n\r\ntype TextColor = {\r\n  textColor: string;\r\n};\r\n\r\nconst Contents = styled.h6<TextColor>`\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n  letter-spacing: -0.32px;\r\n  text-align: center;\r\n  margin-top: 36px;\r\n  white-space: pre-wrap;\r\n  color: ${(props) => props.textColor};\r\n`;\r\n\r\nconst ModalButton = styled(Button)`\r\n  display: flex;\r\n  width: 300px;\r\n  height: 52px;\r\n  padding: 12px 40px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Modal = ({\r\n  isModalOpen,\r\n  additional,\r\n  label,\r\n  close,\r\n  width,\r\n  height,\r\n  background,\r\n  textColor,\r\n}: modalProps) => {\r\n  return (\r\n    <div>\r\n      {isModalOpen && (\r\n        <Wrapper width={width} height={height} background={background}>\r\n          <InsideBox>\r\n            <Body>\r\n              <Contents textColor={textColor}>\r\n                {label.split(\"\\n\").map((letter, index) => (\r\n                  <div key={index}>\r\n                    {letter}\r\n                    <br />\r\n                  </div>\r\n                ))}\r\n              </Contents>\r\n              {additional ? (\r\n                <Contents textColor={textColor}>{additional}</Contents>\r\n              ) : null}\r\n            </Body>\r\n            <ModalButton className=\"close\" onClick={close}>\r\n              확인\r\n            </ModalButton>\r\n          </InsideBox>\r\n        </Wrapper>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface defaultPropsType {\r\n  width: string;\r\n  height: string;\r\n  background: string;\r\n}\r\n\r\nModal.defaultProps = {\r\n  width: \"330px\",\r\n  height: \"180px\",\r\n  background: \"#FFF\",\r\n  textColor: \"#4D4D4D\",\r\n};\r\n\r\nconst Wrapper = styled.div<defaultPropsType>`\r\n  width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n  background-color: ${(props) => props.background};\r\n  border: 1px solid grey;\r\n  border-radius: 20px;\r\n  z-index: 1000;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default Modal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}