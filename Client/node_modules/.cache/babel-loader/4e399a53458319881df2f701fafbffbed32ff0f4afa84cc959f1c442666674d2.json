{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\programming\\\\git clone\\\\mong-geul\\\\Client\\\\src\\\\components\\\\MODAL_TEST.tsx\";\nimport styled from \"styled-components\";\nimport Button from \"./button.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InsideBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = InsideBox;\nconst Body = styled.div``;\n_c2 = Body;\nconst Contents = styled.h6`\n  font-size: 20px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.4px;\n  text-align: center;\n  margin-top: 36px;\n  white-space: pre-wrap;\n  color: var(--gray-1, #4d4d4d);\n`;\n_c3 = Contents;\nconst ModalButton = styled(Button)`\n  display: flex;\n  width: 300px;\n  height: 52px;\n  padding: 12px 40px;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n`;\n_c4 = ModalButton;\nconst Modal = _ref => {\n  let {\n    isModalOpen,\n    additional,\n    label,\n    close\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isModalOpen && /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(InsideBox, {\n        children: [/*#__PURE__*/_jsxDEV(Body, {\n          children: [/*#__PURE__*/_jsxDEV(Contents, {\n            children: label.split(\"\\n\").map(letter => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [letter, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), additional ? /*#__PURE__*/_jsxDEV(Contents, {\n            children: additional\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n          className: \"close\",\n          onClick: close,\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c5 = Modal;\nModal.defaultProps = {\n  width: \"330px\",\n  height: \"180px\"\n};\nconst Wrapper = styled.div`\n  width:  ${props => props.width};\n  height:  ${props => props.height};\n  border: 1px solid black;\n  border-radius: 20px;\n  z-index: 1000;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n_c6 = Wrapper;\nexport default Modal;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"InsideBox\");\n$RefreshReg$(_c2, \"Body\");\n$RefreshReg$(_c3, \"Contents\");\n$RefreshReg$(_c4, \"ModalButton\");\n$RefreshReg$(_c5, \"Modal\");\n$RefreshReg$(_c6, \"Wrapper\");","map":{"version":3,"names":["styled","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","InsideBox","div","_c","Body","_c2","Contents","h6","_c3","ModalButton","_c4","Modal","_ref","isModalOpen","additional","label","close","children","Wrapper","split","map","letter","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c5","defaultProps","width","height","props","_c6","$RefreshReg$"],"sources":["C:/Users/user/Desktop/programming/git clone/mong-geul/Client/src/components/MODAL_TEST.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport Button from \"./button.component\";\r\nimport { useModal } from \"../hooks/useModal\";\r\n\r\ninterface modalProps {\r\n  isModalOpen: boolean;\r\n  close(): void;\r\n  label: string;\r\n  additional?: any;\r\n}\r\n\r\n\r\n\r\nconst InsideBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Body = styled.div``;\r\n\r\nconst Contents = styled.h6`\r\n  font-size: 20px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n  letter-spacing: -0.4px;\r\n  text-align: center;\r\n  margin-top: 36px;\r\n  white-space: pre-wrap;\r\n  color: var(--gray-1, #4d4d4d);\r\n`;\r\n\r\nconst ModalButton = styled(Button)`\r\n  display: flex;\r\n  width: 300px;\r\n  height: 52px;\r\n  padding: 12px 40px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Modal = ({ isModalOpen, additional, label, close }: modalProps) => {\r\n  return (\r\n    <div>\r\n      {isModalOpen && (\r\n        <Wrapper>\r\n          <InsideBox>\r\n            <Body>\r\n              <Contents>\r\n                {label.split(\"\\n\").map((letter) => (\r\n                  <>\r\n                    {letter}\r\n                    <br />\r\n                  </>\r\n                ))}\r\n              </Contents>\r\n              {additional ? <Contents>{additional}</Contents> : null}\r\n            </Body>\r\n            <ModalButton className=\"close\" onClick={close}>\r\n              확인\r\n            </ModalButton>\r\n          </InsideBox>\r\n        </Wrapper>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface defaultPropsType {\r\n    width: string,\r\n    height: string\r\n}\r\n\r\nModal.defaultProps = {\r\n    width: \"330px\",\r\n  height: \"180px\",\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width:  ${props => props.width};\r\n  height:  ${props => props.height};\r\n  border: 1px solid black;\r\n  border-radius: 20px;\r\n  z-index: 1000;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default Modal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}