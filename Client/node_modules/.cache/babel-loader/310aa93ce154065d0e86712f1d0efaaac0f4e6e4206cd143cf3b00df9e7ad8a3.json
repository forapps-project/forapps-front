{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\programming\\\\git clone\\\\mong-geul\\\\Client\\\\src\\\\routes\\\\enterpages\\\\passwordPage_signUp.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport WelcomeMsg from \"../../components/welcomeMsg\";\nimport Footer from \"../../components/footer\";\nimport { StyledDiv } from \"../../components/emailForm\";\nimport { StyledGridDiv } from \"./loginPage\";\nimport Button from \"../../components/button.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordPageSignup = () => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const gotoMain = useNavigate();\n  const handleClick = async e => {\n    e.preventDefault();\n    if (password === \"\") return;\n    try {\n      const res = await axios.post(\"/\", {\n        password: password\n      });\n      /* \r\n      server:\r\n      패스워드 받아서 DB에 저장(이메일과 함께 키 쌍으로)\r\n      그리고 닉네임 랜덤 생성\r\n      gotoMain(\"/main\"); //메인으로 이동\r\n      */\n    } catch {\n      console.log('error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledGridDiv, {\n    children: [/*#__PURE__*/_jsxDEV(WelcomeMsg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-login\",\n      children: /*#__PURE__*/_jsxDEV(StyledDiv, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uC774 \\uD544\\uC694\\uD574\\uC694 :)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: handleClick,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordPageSignup, \"ceO2Bf+CbBEU0OE8PkytcJc0Z4g=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordPageSignup;\nexport default PasswordPageSignup;\nvar _c;\n$RefreshReg$(_c, \"PasswordPageSignup\");","map":{"version":3,"names":["useState","useNavigate","axios","WelcomeMsg","Footer","StyledDiv","StyledGridDiv","Button","jsxDEV","_jsxDEV","PasswordPageSignup","_s","password","setPassword","gotoMain","handleClick","e","preventDefault","res","post","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/programming/git clone/mong-geul/Client/src/routes/enterpages/passwordPage_signUp.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport WelcomeMsg from \"../../components/welcomeMsg\";\r\nimport Footer from \"../../components/footer\";\r\n\r\nimport { StyledDiv } from \"../../components/emailForm\";\r\nimport { StyledGridDiv } from \"./loginPage\";\r\nimport Button from \"../../components/button.component\";\r\n\r\nconst PasswordPageSignup = () => {\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const gotoMain = useNavigate();\r\n\r\n  const handleClick = async (e: any) => {\r\n    e.preventDefault();\r\n    if (password === \"\") return;\r\n    try {\r\n      const res = await axios.post(\"/\", {\r\n        password: password,\r\n      });\r\n      /* \r\n      server:\r\n      패스워드 받아서 DB에 저장(이메일과 함께 키 쌍으로)\r\n      그리고 닉네임 랜덤 생성\r\n      gotoMain(\"/main\"); //메인으로 이동\r\n      */\r\n    } catch {\r\n      console.log('error occurred')\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <StyledGridDiv>\r\n      <WelcomeMsg />\r\n      <div className=\"password-login\">\r\n        <StyledDiv>\r\n          <label>회원가입이 필요해요 :)</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"비밀번호를 입력해주세요.\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></input>\r\n          <Button type=\"submit\" onClick={handleClick}>\r\n            회원가입\r\n          </Button>\r\n        </StyledDiv>\r\n      </div>\r\n      <Footer />\r\n    </StyledGridDiv>\r\n  );\r\n};\r\nexport default PasswordPageSignup;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,MAAM,MAAM,yBAAyB;AAE5C,SAASC,SAAS,QAAQ,4BAA4B;AACtD,SAASC,aAAa,QAAQ,aAAa;AAC3C,OAAOC,MAAM,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,WAAW,GAAG,MAAOC,CAAM,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIL,QAAQ,KAAK,EAAE,EAAE;IACrB,IAAI;MACF,MAAMM,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,GAAG,EAAE;QAChCP,QAAQ,EAAEA;MACZ,CAAC,CAAC;MACF;AACN;AACA;AACA;AACA;AACA;IACI,CAAC,CAAC,MAAM;MACNQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC/B;EAEF,CAAC;EAED,oBACEZ,OAAA,CAACH,aAAa;IAAAgB,QAAA,gBACZb,OAAA,CAACN,UAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdjB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAC7Bb,OAAA,CAACJ,SAAS;QAAAiB,QAAA,gBACRb,OAAA;UAAAa,QAAA,EAAO;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5BjB,OAAA;UACEmB,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,sEAAe;UAC3BC,KAAK,EAAElB,QAAS;UAChBmB,QAAQ,EAAGf,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACgB,MAAM,CAACF,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACTjB,OAAA,CAACF,MAAM;UAACqB,IAAI,EAAC,QAAQ;UAACK,OAAO,EAAElB,WAAY;UAAAO,QAAA,EAAC;QAE5C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNjB,OAAA,CAACL,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEpB,CAAC;AAACf,EAAA,CA3CID,kBAAkB;EAAA,QAELT,WAAW;AAAA;AAAAiC,EAAA,GAFxBxB,kBAAkB;AA4CxB,eAAeA,kBAAkB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}