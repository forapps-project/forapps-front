{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\programming\\\\git clone\\\\mong-geul\\\\Client\\\\src\\\\components\\\\Modal.tsx\";\nimport styled from \"styled-components\";\nimport Button from \"./button.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  background-color: ${props => props.background};\n  border: none;\n  border-radius: 20px;\n  z-index: 1000;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n_c = Wrapper;\nexport const ModalBackdrop = styled.div`\n  //딤처리\n  z-index: 3;\n  position: fixed;\n  display : flex;\n  justify-content : center;\n  align-items : center;\n  background-color: ${props => props.dimmed};\n  border-radius: 10px;\n  top : 0;\n  left : 0;\n  right : 0;\n  bottom : 0;\n`;\n_c2 = ModalBackdrop;\nconst InsideBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 32px;\n`;\n_c3 = InsideBox;\nconst Body = styled.div``;\n_c4 = Body;\nconst Contents = styled.h6`\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.32px;\n  text-align: center;\n  position: relative;\n  top: 1.2px;\n  margin-bottom: 0;\n  white-space: pre-wrap;\n  color: ${props => props.textColor};\n  height: width;\n`;\n_c5 = Contents;\nconst ModalButton = styled(Button)`\n  display: flex;\n  width: 300px;\n  height: 52px;\n  padding: 12px 40px;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  font-size: 16px;\n`;\n_c6 = ModalButton;\nconst Modal = _ref => {\n  let {\n    success,\n    isModalOpen,\n    additional,\n    label,\n    close,\n    successFunc,\n    width,\n    height,\n    background,\n    textColor,\n    dimmed\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isModalOpen && /*#__PURE__*/_jsxDEV(ModalBackdrop, {\n      dimmed: dimmed,\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        width: width,\n        height: height,\n        background: background,\n        children: /*#__PURE__*/_jsxDEV(InsideBox, {\n          children: [/*#__PURE__*/_jsxDEV(Body, {\n            children: [/*#__PURE__*/_jsxDEV(Contents, {\n              textColor: textColor,\n              children: label.split(\"\\n\").map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [letter, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), additional ? /*#__PURE__*/_jsxDEV(Contents, {\n              textColor: textColor,\n              children: additional\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalButton, {\n            className: \"close\",\n            onClick: success ? close : successFunc,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_c7 = Modal;\nModal.defaultProps = {\n  width: \"330px\",\n  height: \"180px\",\n  background: \"#FFF\",\n  textColor: \"#4D4D4D\",\n  dimmed: \"rgba(0, 0, 0, 0.60);\"\n};\nexport default Modal;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"ModalBackdrop\");\n$RefreshReg$(_c3, \"InsideBox\");\n$RefreshReg$(_c4, \"Body\");\n$RefreshReg$(_c5, \"Contents\");\n$RefreshReg$(_c6, \"ModalButton\");\n$RefreshReg$(_c7, \"Modal\");","map":{"version":3,"names":["styled","Button","jsxDEV","_jsxDEV","Wrapper","div","props","width","height","background","_c","ModalBackdrop","dimmed","_c2","InsideBox","_c3","Body","_c4","Contents","h6","textColor","_c5","ModalButton","_c6","Modal","_ref","success","isModalOpen","additional","label","close","successFunc","children","split","map","letter","index","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c7","defaultProps","$RefreshReg$"],"sources":["C:/Users/user/Desktop/programming/git clone/mong-geul/Client/src/components/Modal.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport Button from \"./button.component\";\r\nimport { useModal } from \"../hooks/useModal\";\r\n\r\ninterface modalProps {\r\n  success: boolean;\r\n  isModalOpen: boolean;\r\n  close?(): void;\r\n  successFunc?(): void;\r\n  label: string;\r\n  additional?: any;\r\n  width: string;\r\n  height: string;\r\n  background: string;\r\n  textColor: string;\r\n  dimmed: string;\r\n}\r\n\r\ninterface defaultPropsType {\r\n  width: string;\r\n  height: string;\r\n  background: string;\r\n}\r\n\r\n\r\nconst Wrapper = styled.div<defaultPropsType>`\r\n  width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n  background-color: ${(props) => props.background};\r\n  border: none;\r\n  border-radius: 20px;\r\n  z-index: 1000;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\ntype dimmedProp = {\r\n  dimmed: string;\r\n}\r\n\r\nexport const ModalBackdrop = styled.div<dimmedProp>`\r\n  //딤처리\r\n  z-index: 3;\r\n  position: fixed;\r\n  display : flex;\r\n  justify-content : center;\r\n  align-items : center;\r\n  background-color: ${(props)=>props.dimmed};\r\n  border-radius: 10px;\r\n  top : 0;\r\n  left : 0;\r\n  right : 0;\r\n  bottom : 0;\r\n`;\r\n\r\nconst InsideBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 32px;\r\n`;\r\n\r\nconst Body = styled.div``;\r\n\r\ntype TextColor = {\r\n  textColor: string;\r\n};\r\n\r\nconst Contents = styled.h6<TextColor>`\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  line-height: normal;\r\n  letter-spacing: -0.32px;\r\n  text-align: center;\r\n  position: relative;\r\n  top: 1.2px;\r\n  margin-bottom: 0;\r\n  white-space: pre-wrap;\r\n  color: ${(props) => props.textColor};\r\n  height: width;\r\n`;\r\n\r\nconst ModalButton = styled(Button)`\r\n  display: flex;\r\n  width: 300px;\r\n  height: 52px;\r\n  padding: 12px 40px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Modal = ({\r\n  success,\r\n  isModalOpen,\r\n  additional,\r\n  label,\r\n  close,\r\n  successFunc,\r\n  width,\r\n  height,\r\n  background,\r\n  textColor,\r\n  dimmed,\r\n}: modalProps) => {\r\n  return (\r\n    <div>\r\n      {isModalOpen && (\r\n        <ModalBackdrop dimmed={dimmed}>\r\n        <Wrapper width={width} height={height} background={background}>\r\n          <InsideBox>\r\n            <Body>\r\n              <Contents textColor={textColor}>\r\n                {label.split(\"\\n\").map((letter, index) => (\r\n                  <div key={index}>\r\n                    {letter}\r\n                    <br />\r\n                  </div>\r\n                ))}\r\n              </Contents>\r\n              {additional ? (\r\n                <Contents textColor={textColor}>{additional}</Contents>\r\n              ) : null}\r\n            </Body>\r\n            <ModalButton className=\"close\" onClick={success? close : successFunc}>\r\n              확인\r\n            </ModalButton>\r\n          </InsideBox>\r\n        </Wrapper>\r\n        </ModalBackdrop>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.defaultProps = {\r\n  width: \"330px\",\r\n  height: \"180px\",\r\n  background: \"#FFF\",\r\n  textColor: \"#4D4D4D\",\r\n  dimmed:\"rgba(0, 0, 0, 0.60);\"\r\n};\r\n\r\n\r\nexport default Modal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}