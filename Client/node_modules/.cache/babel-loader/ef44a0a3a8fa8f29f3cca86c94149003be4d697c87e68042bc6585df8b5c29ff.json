{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Modal from \"../components/Modal\";\nexport const useModal = () => {\n  _s();\n  /* \r\n  const { open, close } = useContext(ModalsDispatchContext);\r\n    const openModal = (Component, props) => {\r\n    open(Component, props);\r\n  };\r\n    const closeModal = (Component) => {\r\n    close(Component)\r\n  }\r\n  */\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const successFunc = () => {\n    closeModal();\n    localStoragelocalStorage.setItem('user-wakeup-time', JSON.stringify(value));\n  };\n  return {\n    Modal,\n    isModalOpen,\n    openModal,\n    closeModal,\n    successFunc\n  };\n};\n_s(useModal, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");","map":{"version":3,"names":["useState","Modal","useModal","_s","isModalOpen","setIsModalOpen","openModal","closeModal","successFunc","localStoragelocalStorage","setItem","JSON","stringify","value"],"sources":["C:/Users/user/Desktop/programming/git clone/mong-geul/Client/src/hooks/useModal.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nexport const useModal = () => {\r\n  /* \r\n  const { open, close } = useContext(ModalsDispatchContext);\r\n\r\n  const openModal = (Component, props) => {\r\n    open(Component, props);\r\n  };\r\n\r\n  const closeModal = (Component) => {\r\n    close(Component)\r\n  }\r\n  */\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n  const openModal = (): void => {\r\n    setIsModalOpen(true);\r\n  };\r\n  const closeModal = (): void => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const successFunc = (): void => {\r\n    closeModal();\r\n    localStoragelocalStorage.setItem('user-wakeup-time', JSON.stringify(value))\r\n  }\r\n\r\n  return {\r\n    Modal,\r\n    isModalOpen,\r\n    openModal,\r\n    closeModal,\r\n    successFunc,\r\n  };\r\n};\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,qBAAqB;AAEvC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAIE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAU,KAAK,CAAC;EAE9D,MAAMM,SAAS,GAAGA,CAAA,KAAY;IAC5BD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EACD,MAAME,UAAU,GAAGA,CAAA,KAAY;IAC7BF,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAY;IAC9BD,UAAU,CAAC,CAAC;IACZE,wBAAwB,CAACC,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;EAC7E,CAAC;EAED,OAAO;IACLZ,KAAK;IACLG,WAAW;IACXE,SAAS;IACTC,UAAU;IACVC;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CAlCWD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}