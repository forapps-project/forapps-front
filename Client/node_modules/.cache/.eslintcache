[{"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\index.tsx":"1","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\App.tsx":"2","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\reportWebVitals.ts":"3","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\serviceWorkerRegistration.ts":"4","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\userRoutes.tsx":"5","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\styles\\globalStyle.tsx":"6","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\styles\\colortheme.tsx":"7","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\enterpages\\passwordPage_login.tsx":"8","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\enterpages\\passwordPage_signUp.tsx":"9","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\enterpages\\loginPage.tsx":"10","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\navigation.tsx":"11","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\user\\main.tsx":"12","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\welcomeMsg.tsx":"13","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\footer.tsx":"14","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\emailForm.tsx":"15","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\button.component.tsx":"16","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\hooks\\useModal.tsx":"17","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\sleepingTimeBox.component.tsx":"18","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\contentsBox.component.tsx":"19","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\iconbox.tsx":"20","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\styles\\sleepingTimeBox.styles.tsx":"21","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\user\\diary.tsx":"22","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\Modal.tsx":"23","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\contexts\\modalContext.tsx":"24","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\contexts\\wakeupTimeReducer.context.tsx":"25","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\enterpages\\socialLoginPage.tsx":"26","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\KakaoLogin.tsx":"27","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\utils\\select-options.tsx":"28","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\wakeupTime.component.tsx":"29","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\enterpages\\redirectionPage.tsx":"30"},{"size":1262,"mtime":1688711175589,"results":"31","hashOfConfig":"32"},{"size":1074,"mtime":1689064825594,"results":"33","hashOfConfig":"32"},{"size":440,"mtime":1688566504237,"results":"34","hashOfConfig":"32"},{"size":5398,"mtime":1688566504250,"results":"35","hashOfConfig":"32"},{"size":448,"mtime":1688631660135,"results":"36","hashOfConfig":"32"},{"size":370,"mtime":1688566504255,"results":"37","hashOfConfig":"32"},{"size":230,"mtime":1688566504253,"results":"38","hashOfConfig":"32"},{"size":2644,"mtime":1688796465683,"results":"39","hashOfConfig":"32"},{"size":1601,"mtime":1688566504244,"results":"40","hashOfConfig":"32"},{"size":690,"mtime":1688801294064,"results":"41","hashOfConfig":"32"},{"size":860,"mtime":1688817931904,"results":"42","hashOfConfig":"32"},{"size":1165,"mtime":1689159097302,"results":"43","hashOfConfig":"32"},{"size":680,"mtime":1689126968422,"results":"44","hashOfConfig":"32"},{"size":1232,"mtime":1689127574028,"results":"45","hashOfConfig":"32"},{"size":2450,"mtime":1688634412433,"results":"46","hashOfConfig":"32"},{"size":1104,"mtime":1689080686208,"results":"47","hashOfConfig":"32"},{"size":696,"mtime":1688989877406,"results":"48","hashOfConfig":"32"},{"size":3239,"mtime":1689133856607,"results":"49","hashOfConfig":"32"},{"size":233,"mtime":1689144946700,"results":"50","hashOfConfig":"32"},{"size":1512,"mtime":1688979186458,"results":"51","hashOfConfig":"32"},{"size":1680,"mtime":1689140284907,"results":"52","hashOfConfig":"32"},{"size":997,"mtime":1688957623473,"results":"53","hashOfConfig":"32"},{"size":3825,"mtime":1689159774685,"results":"54","hashOfConfig":"32"},{"size":2439,"mtime":1688701872700,"results":"55","hashOfConfig":"32"},{"size":1561,"mtime":1688991030826,"results":"56","hashOfConfig":"32"},{"size":447,"mtime":1689128105042,"results":"57","hashOfConfig":"32"},{"size":1068,"mtime":1689157328472,"results":"58","hashOfConfig":"32"},{"size":114,"mtime":1688954807712,"results":"59","hashOfConfig":"32"},{"size":3782,"mtime":1689160369005,"results":"60","hashOfConfig":"32"},{"size":559,"mtime":1689061058929,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"11jvncr",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"65"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"65"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\index.tsx",[],[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\App.tsx",["159","160","161","162"],[],"import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport LoginPage from \"./routes/enterpages/loginPage\";\r\nimport UserRouter from \"./userRoutes\";\r\nimport PasswordPageLogin from \"./routes/enterpages/passwordPage_login\";\r\nimport PasswordPageSignup from \"./routes/enterpages/passwordPage_signUp\";\r\nimport SocialLoginPage from \"./routes/enterpages/socialLoginPage\";\r\n\r\nimport GlobalStyle from \"./styles/globalStyle\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./styles/colortheme\";\r\nimport RedirectionPage from \"./routes/enterpages/redirectionPage\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/\" element={<SocialLoginPage />} />\r\n            {/* <Route path=\"/oauth2/authorization/kakao\" element={<RedirectionPage />} /> */}\r\n            <Route path=\"/*\" element={<UserRouter />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\reportWebVitals.ts",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\serviceWorkerRegistration.ts",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\userRoutes.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\styles\\globalStyle.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\styles\\colortheme.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\enterpages\\passwordPage_login.tsx",["163","164"],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\enterpages\\passwordPage_signUp.tsx",["165","166"],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\enterpages\\loginPage.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\navigation.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\user\\main.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\welcomeMsg.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\footer.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\emailForm.tsx",["167","168"],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\button.component.tsx",["169","170"],[],"import { ReactElement, ReactNode } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport { theme } from \"../styles/colortheme\";\r\n\r\ninterface ButtonStyle {\r\n  width?: string;\r\n  height?: string;\r\n  borderRadius?: string;\r\n  fontSize?: string;\r\n  background?: string;\r\n}\r\n\r\ninterface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    ButtonStyle {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst StyledButton = styled.button<ButtonStyle>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 12px 40px;\r\n  flex-shrink: 0;\r\n  border-radius: 8px;\r\n  border: 1px solid;\r\n  width: 100%;\r\n  height: 48px;\r\n  color: var(--main-white-1, #fff);\r\n  border-radius: 12px;\r\n  border-color: var(--sleeper-blue-1, #5581f1);\r\n  background: ${(props)=> props.background || \"var(--sleeper-blue-1, #5581f1)\"};\r\n`;\r\n\r\nfunction Button({ className, children, ...rest }: ButtonProps): ReactElement {\r\n  return (\r\n      <StyledButton className={className} {...rest}>\r\n        {children}\r\n      </StyledButton>\r\n  );\r\n}\r\n\r\nexport default Button;","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\hooks\\useModal.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\sleepingTimeBox.component.tsx",["171"],[],"import { useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { WakeUpTimeContext } from \"../contexts/wakeupTimeReducer.context\";\r\nimport { useModal } from \"../hooks/useModal\";\r\nimport { ReactComponent as Expand } from \"../icons/Expand.svg\";\r\n\r\nimport {\r\n  Wrapper,\r\n  WakeupBox,\r\n  Contents,\r\n  WakeupSetting,\r\n  SleepingComment,\r\n  SleepingHour,\r\n  NickNameText,\r\n  Text,\r\n} from \"../styles/sleepingTimeBox.styles\";\r\nimport WakeupTime from \"./wakeupTime.component\";\r\n\r\nconst SleepingTimeBox = () => {\r\n  const { Modal, isModalOpen, openModal, successFunc } = useModal();\r\n  let { hour, minute, md } = useContext(WakeUpTimeContext);\r\n\r\n  let USER_NAME = \"꿈꾸는 여행자\";\r\n  //유저 닉네임 GET\r\n  /* useEffect(() => {\r\n    async function getUserName() {\r\n      const res = await axios.get(\"\")\r\n    }\r\n    getUserName();\r\n  },[]) */\r\n\r\n  //현재시간\r\n  let HOUR = 0;\r\n  let MIN = 0;\r\n\r\n  let currentTime = null;\r\n  let today = new Date();\r\n  let year = today.getFullYear();\r\n  let month = today.getMonth();\r\n  let day = today.getDate();\r\n  let hours = today.getHours();\r\n  let minutes = today.getMinutes();\r\n  currentTime = new Date(year, month, day, hours, minutes);\r\n\r\n  //기상시간\r\n  let wakeupTime = null;\r\n  if (hours <= 6) {\r\n    //현재시각이 오전\r\n    if (md === \"PM\") {\r\n      wakeupTime = new Date(year, month, day, hour + 12, minute);\r\n    } else {\r\n      wakeupTime = new Date(year, month, day, hour, minute);\r\n    }\r\n  } else if (hours <= 11) {\r\n    if (md === \"PM\") {\r\n      wakeupTime = new Date(year, month, day + 1, hour + 12, minute);\r\n    } else {\r\n      wakeupTime = new Date(year, month, day + 1, hour, minute);\r\n    }\r\n  } else {\r\n    //현재가 오후\r\n    if (md === \"PM\") {\r\n      wakeupTime = new Date(year, month, day + 1, hour + 12, minute);\r\n    } else {\r\n      wakeupTime = new Date(year, month, day + 1, hour, minute);\r\n    }\r\n  }\r\n\r\n  //시간차 계산\r\n  const elapsedMSec = wakeupTime.getTime() - currentTime.getTime();\r\n  const elapsedMin = elapsedMSec / (1000 * 60);\r\n  const elapsedHour = Math.floor(elapsedMSec / 1000 / 60 / 60);\r\n\r\n  HOUR = Math.floor(elapsedMSec / 1000 / 60 / 60);\r\n  MIN = elapsedMin - elapsedHour * 60;\r\n\r\n  return (\r\n    <>\r\n    <Wrapper>\r\n      <WakeupBox>\r\n        <Contents>\r\n          <SleepingComment>\r\n            <NickNameText>{`${USER_NAME}님,`}</NickNameText>\r\n            <br></br>\r\n            <Text>\r\n              지금 잠들면{\" \"}\r\n              <SleepingHour>\r\n                {`${HOUR}`}시간 {`${MIN}`}분\r\n              </SleepingHour>{\" \"}\r\n              여행할 수 있어요:)\r\n            </Text>\r\n          </SleepingComment>\r\n          <WakeupSetting>\r\n            <span onClick={openModal}>기상시간 설정하기</span>\r\n            <Expand />\r\n          </WakeupSetting>\r\n        </Contents>\r\n      </WakeupBox>\r\n    </Wrapper>\r\n\r\n      <Modal\r\n        success={true}\r\n        width=\"330px\"\r\n        height=\"332px\"\r\n        background=\"#373543\"\r\n        textColor=\"#FFF\"\r\n        isModalOpen={isModalOpen}\r\n        successFunc={successFunc}\r\n        label=\"기상 시간 선택\"\r\n        additional={<WakeupTime />}\r\n        fontSize=\"20px\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SleepingTimeBox;\r\n","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\contentsBox.component.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\iconbox.tsx",["172","173"],[],"import { ReactNode } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nimport { ReactComponent as Home } from \"../icons/Home.svg\";\r\nimport { ReactComponent as Edit } from \"../icons/Edit.svg\";\r\nimport { ReactComponent as Chat } from \"../icons/Chat.svg\";\r\nimport { ReactComponent as Flag } from \"../icons/Flag.svg\";\r\nimport { ReactComponent as Setting } from \"../icons/Setting.svg\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\ninterface IconBoxProps {\r\n    icon: ReactNode;\r\n    text: string;\r\n    route: string;\r\n    key: number;\r\n  };\r\n\r\nexport const IconItems = [\r\n  { icon: <Home />, text: \"홈\", route: \"/main\", id: 1 },\r\n  { icon: <Edit />, text: \"일지\", route: \"/diary\", id: 2 },\r\n  { icon: <Chat />, text: \"커뮤니티\", route: \"/community\", id: 3 },\r\n  { icon: <Setting />, text: \"설정\", route: \"setting\", id: 5 },\r\n];\r\n\r\nconst StyledDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-size: 12px;\r\n  color: var(--gray-2, #777);\r\n`;\r\n\r\nconst linkStyle = {\r\n  textDecoration: \"none\",\r\n  color: \"white\",\r\n};\r\n\r\nconst activeStyle = {\r\n  textDecoration: \"none\",\r\n  color: \"#FFD954\"\r\n}\r\n\r\nconst IconBox = ({ icon, text, route }: IconBoxProps) => {\r\n    return (\r\n      <StyledDiv>\r\n        <NavLink to={route} style={({isActive}) => (isActive ? activeStyle :linkStyle)}>\r\n          {icon}\r\n        </NavLink>\r\n        <Text>{text}</Text>\r\n      </StyledDiv>\r\n    );\r\n};\r\n\r\nexport default IconBox;","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\styles\\sleepingTimeBox.styles.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\user\\diary.tsx",["174","175","176","177","178","179","180"],[],"import { useContext, useState } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { useModal } from \"../../hooks/useModal\";\r\nimport ModalsProvider, { ModalsDispatchContext, ModalsStateContext } from \"../../contexts/modalContext\";\r\nimport ReactModal from \"react-modal\";\r\n\r\n\r\nconst Diary = () => {\r\n  const { Modal, isModalOpen, closeModal, openModal } = useModal();\r\n  //const { openModal, closeModal } = useContext(ModalsDispatchContext);\r\n  //const [isOpen,setIsopen] = useState(false)\r\n\r\n  return (\r\n    <div>\r\n      This is Diary page.\r\n      <button onClick={openModal}>click</button>\r\n      \r\n      <Modal\r\n      success={false}\r\n        isModalOpen={isModalOpen}\r\n        close={closeModal}\r\n        label=\"잘못된 이메일입니다!\"\r\n      />\r\n      {/* <ReactModal isOpen={isOpen} className={\"modal-box\"} overlayClassName={\"dimmed\"}>\r\n      </ReactModal>\r\n      <button onClick={()=>setIsopen(true)}>Test</button> */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diary;\r\n","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\Modal.tsx",["181"],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\contexts\\modalContext.tsx",["182"],[],"import { ReactElement, createContext, useState, useMemo } from 'react';\r\n\r\ninterface ModalsProviderProps {\r\n    children: ReactElement | ReactElement[]\r\n}\r\n\r\nexport const ModalsDispatchContext = createContext<{\r\n    openModal: () => void;\r\n    closeModal: () => void;\r\n}>({\r\n    openModal: () => {return;},\r\n    closeModal:() => {return;}\r\n});\r\n\r\nexport const ModalsStateContext = createContext<boolean|null>(false)\r\n\r\nconst ModalsProvider = ({children}:ModalsProviderProps) => {\r\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false)\r\n    }\r\n\r\n    const dispatch = { openModal, closeModal };\r\n\r\n    return (\r\n        <ModalsStateContext.Provider value={isModalOpen}>\r\n            <ModalsDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </ModalsDispatchContext.Provider>\r\n        </ModalsStateContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ModalsProvider;\r\n\r\n/* interface openFunc {\r\n    (Component: ReactNode, props: string[]): void\r\n}\r\n\r\ninterface modalDispatchContext {\r\n   open():void,\r\n   close():void,\r\n}\r\n\r\ninterface openedModal {\r\n    Component: ReactNode,\r\n    props: any,\r\n}\r\n\r\ninterface modalsProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ModalsDispatchContext= createContext({} as modalDispatchContext)\r\n\r\nexport const ModalsStateContext = createContext([]);\r\n\r\n\r\nconst ModalsProvider = ({ children }:modalsProviderProps) => {\r\n    const [openedModals, setOpenedModals] = useState<openedModal[]>([]);\r\n    //컴포넌트와, 거기에 넘겨줄 props를 state에 저장\r\n\r\n    const open: openFunc = (Component, props) => {\r\n        setOpenedModals((modals) => {\r\n            return [...modals, { Component, props }];\r\n        });\r\n    };\r\n\r\n    const close = (Component: ReactNode) => {\r\n        setOpenedModals((modals) => {\r\n            return modals.filter((modal) => {\r\n                return modals.Component !== Component;\r\n            })\r\n        })\r\n    }\r\n\r\n    const dispatch = useMemo(() => ({open, close}), []);\r\n\r\n\r\n    return (\r\n        <ModalsStateContext.Provider value={openedModals}>\r\n            <ModalsDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </ModalsDispatchContext.Provider>\r\n        </ModalsStateContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ModalsProvider; */","C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\contexts\\wakeupTimeReducer.context.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\enterpages\\socialLoginPage.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\KakaoLogin.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\utils\\select-options.tsx",[],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\components\\wakeupTime.component.tsx",["183","184","185"],[],"C:\\Users\\user\\Desktop\\programming\\git clone\\mong-geul\\Client\\src\\routes\\enterpages\\redirectionPage.tsx",["186","187"],[],{"ruleId":"188","severity":1,"message":"189","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":17},{"ruleId":"188","severity":1,"message":"192","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":25},{"ruleId":"188","severity":1,"message":"193","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":26},{"ruleId":"188","severity":1,"message":"194","line":11,"column":8,"nodeType":"190","messageId":"191","endLine":11,"endColumn":23},{"ruleId":"188","severity":1,"message":"195","line":25,"column":30,"nodeType":"190","messageId":"191","endLine":25,"endColumn":39},{"ruleId":"188","severity":1,"message":"196","line":40,"column":13,"nodeType":"190","messageId":"191","endLine":40,"endColumn":16},{"ruleId":"188","severity":1,"message":"197","line":14,"column":9,"nodeType":"190","messageId":"191","endLine":14,"endColumn":17},{"ruleId":"188","severity":1,"message":"196","line":20,"column":13,"nodeType":"190","messageId":"191","endLine":20,"endColumn":16},{"ruleId":"188","severity":1,"message":"198","line":7,"column":10,"nodeType":"190","messageId":"191","endLine":7,"endColumn":15},{"ruleId":"188","severity":1,"message":"195","line":46,"column":31,"nodeType":"190","messageId":"191","endLine":46,"endColumn":40},{"ruleId":"188","severity":1,"message":"199","line":2,"column":18,"nodeType":"190","messageId":"191","endLine":2,"endColumn":21},{"ruleId":"188","severity":1,"message":"198","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":15},{"ruleId":"188","severity":1,"message":"200","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":13},{"ruleId":"188","severity":1,"message":"201","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":14},{"ruleId":"188","severity":1,"message":"202","line":7,"column":28,"nodeType":"190","messageId":"191","endLine":7,"endColumn":32},{"ruleId":"188","severity":1,"message":"203","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":20},{"ruleId":"188","severity":1,"message":"204","line":1,"column":22,"nodeType":"190","messageId":"191","endLine":1,"endColumn":30},{"ruleId":"188","severity":1,"message":"205","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":13},{"ruleId":"188","severity":1,"message":"206","line":4,"column":8,"nodeType":"190","messageId":"191","endLine":4,"endColumn":22},{"ruleId":"188","severity":1,"message":"207","line":4,"column":26,"nodeType":"190","messageId":"191","endLine":4,"endColumn":47},{"ruleId":"188","severity":1,"message":"208","line":4,"column":49,"nodeType":"190","messageId":"191","endLine":4,"endColumn":67},{"ruleId":"188","severity":1,"message":"209","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":18},{"ruleId":"188","severity":1,"message":"210","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":18},{"ruleId":"188","severity":1,"message":"211","line":1,"column":49,"nodeType":"190","messageId":"191","endLine":1,"endColumn":56},{"ruleId":"188","severity":1,"message":"199","line":10,"column":18,"nodeType":"190","messageId":"191","endLine":10,"endColumn":21},{"ruleId":"188","severity":1,"message":"212","line":87,"column":37,"nodeType":"190","messageId":"191","endLine":87,"endColumn":45},{"ruleId":"213","severity":1,"message":"214","line":103,"column":6,"nodeType":"215","endLine":103,"endColumn":16,"suggestions":"216"},{"ruleId":"188","severity":1,"message":"217","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":19},{"ruleId":"188","severity":1,"message":"200","line":3,"column":8,"nodeType":"190","messageId":"191","endLine":3,"endColumn":13},"@typescript-eslint/no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","'PasswordPageLogin' is defined but never used.","'PasswordPageSignup' is defined but never used.","'RedirectionPage' is defined but never used.","'openModal' is assigned a value but never used.","'res' is assigned a value but never used.","'gotoMain' is assigned a value but never used.","'theme' is defined but never used.","'css' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'Flag' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'Modal' is defined but never used.","'ModalsProvider' is defined but never used.","'ModalsDispatchContext' is defined but never used.","'ModalsStateContext' is defined but never used.","'ReactModal' is defined but never used.","'useModal' is defined but never used.","'useMemo' is defined but never used.","'selectMd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["218"],"'useEffect' is defined but never used.",{"desc":"219","fix":"220"},"Update the dependencies array to be: [dispatch, selected]",{"range":"221","text":"222"},[2428,2438],"[dispatch, selected]"]